"""Add venue_latitude column to events table

Revision ID: 30e957cc4ab7
Revises: 25ff89e1a7e5
Create Date: 2025-01-29 22:34:15.403074

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '30e957cc4ab7'
down_revision: Union[str, None] = '25ff89e1a7e5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('venue_latitude', sa.Float(), nullable=True))
    op.create_unique_constraint('uq_oauth_tokens_user_provider', 'oauth_tokens', ['user_id', 'provider'])
    op.add_column('user_preferences', sa.Column('max_distance', sa.Float(), nullable=True))
    op.drop_column('user_preferences', 'accessibility_requirements')
    op.drop_column('user_preferences', 'indoor_outdoor_preference')
    op.drop_column('user_preferences', 'age_restriction_preference')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_preferences', sa.Column('age_restriction_preference', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('indoor_outdoor_preference', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('user_preferences', sa.Column('accessibility_requirements', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), autoincrement=False, nullable=True))
    op.drop_column('user_preferences', 'max_distance')
    op.drop_constraint('uq_oauth_tokens_user_provider', 'oauth_tokens', type_='unique')
    op.drop_column('events', 'venue_latitude')
    # ### end Alembic commands ###
